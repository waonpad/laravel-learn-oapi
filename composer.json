{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": ["laravel", "framework"],
    "license": "MIT",
    "require": {
        "php": "^8.3",
        "darkaonline/l5-swagger": "^8.6",
        "laravel/framework": "^11.31",
        "laravel/octane": "^2.6",
        "laravel/sanctum": "^4.0"
    },
    "require-dev": {
        "fakerphp/faker": "^1.23",
        "friendsofphp/php-cs-fixer": "^3.65",
        "larastan/larastan": "^3.0",
        "laravel/pail": "^1.1",
        "laravel/pint": "^1.13",
        "laravel/sail": "^1.26",
        "laravel/tinker": "^2.10",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.1",
        "phpstan/phpstan": "^2.0",
        "phpstan/phpstan-mockery": "^2.0",
        "phpunit/phpunit": "^11.0.1"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/",
            "OpenApi\\": "app/OpenApi/"
        },
        "files": [
            "app/helpers.php"
        ],
        "classmap": [
            "app/OpenApi/SchemaDefinitions/",
            "app/Http/Requests/"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "setup": [
            "echo \"依存パッケージをインストール\"",
            "composer install",
            "bun install",

            "echo \"Git Hooks をインストール\"",
            "lefthook install",

            "echo \"環境変数の設定ファイルが存在しない場合は 元となるファイルをコピーして作成\"",
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",

            "echo \"アプリケーションキーを生成\"",
            "@php artisan key:generate --ansi",

            "echo \"データベースファイルが存在しない場合は作成\"",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",

            "echo \"マイグレーション\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "bunx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan octane:start --watch --host 0.0.0.0\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\""
        ],
        "start": [
            "Composer\\Config::disableProcessTimeout",
            "php artisan octane:start --host 0.0.0.0"
        ],
        "start:prod": [
            "echo \"アプリケーションキーの検証\"",
            "php artisan validate-app-key --ansi --env=production",

            "echo \"Litestream レプリケーションを復元\"",
            "litestream restore -if-replica-exists -config litestream.yml database/database.production.sqlite",

            "echo \"マイグレーション\"",
            "@php artisan migrate --graceful --ansi --force --env=production",

            "echo \"データをキャッシュ\"",
            "php artisan optimize --ansi --env=production",

            "echo \"Swagger ドキュメントを生成\"",
            "php artisan l5-swagger:generate --env=production",

            "echo \"アプリケーションを起動\"",
            "Composer\\Config::disableProcessTimeout",
            "litestream replicate -exec 'php artisan octane:start --host 0.0.0.0 --env=production' -config litestream.yml"
        ],
        "lint": [
            "./vendor/bin/phpstan analyze --memory-limit=2G"
        ],
        "format": [
            "./vendor/bin/php-cs-fixer fix"
        ],
        "test": [
            "./vendor/bin/phpunit"
        ],
        "test:coverage": [
            "./vendor/bin/phpunit --coverage-clover coverage.xml"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
